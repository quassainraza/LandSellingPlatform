{"ast":null,"code":"import { LOGIN_SUCCESSFUL, LOGIN_FAILED, LOGOUT, SIGNUP_SUCCEEDED, SIGNUP_FAILED, CHANGE_CONTRACT_ADDRESS, PLOTS_LOADED } from \"../constants/action-types\";\nimport _ from 'lodash';\nimport Web3 from 'web3';\nimport abi from '../contracts/landContract.json';\nvar web3 = new Web3();\nweb3.setProvider(new Web3.providers.HttpProvider('http://localhost:7545'));\nexport var login = function login(address, password) {\n  return function (dispatch) {\n    web3.eth.personal.unlockAccount(address, password, 600).then(function (response) {\n      console.info('Login successful:', response);\n      dispatch({\n        type: LOGIN_SUCCESSFUL,\n        payload: address\n      });\n    }).catch(function (error) {\n      console.log('Login Error:', error);\n      dispatch({\n        type: LOGIN_FAILED,\n        payload: null\n      });\n    });\n  };\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    return dispatch({\n      type: LOGOUT,\n      payload: null\n    });\n  };\n};\nexport var signup = function signup(password) {\n  return function (dispatch) {\n    web3.eth.personal.newAccount(password).then(function (response) {\n      console.info('new account ', response);\n      dispatch({\n        type: SIGNUP_SUCCEEDED,\n        payload: response\n      });\n    }).catch(function (error) {\n      console.error('error creating account ', error);\n      dispatch({\n        type: SIGNUP_FAILED\n      });\n    });\n  };\n};\nexport var changeContractAddress = function changeContractAddress(newAddress) {\n  return function (dispatch) {\n    if (web3.utils.isAddress(newAddress)) {\n      var contractInstance = new web3.eth.Contract(abi, newAddress);\n      dispatch({\n        type: CHANGE_CONTRACT_ADDRESS,\n        payload: {\n          contractAddress: newAddress,\n          contractAddressValid: true,\n          contractInstance: contractInstance\n        }\n      });\n      loadPlots(contractInstance, dispatch);\n      subscribeToEvents(contractInstance, dispatch);\n    } else {\n      dispatch({\n        type: CHANGE_CONTRACT_ADDRESS,\n        payload: {\n          contractAddress: newAddress,\n          contractAddressValid: false,\n          contractInstance: null\n        }\n      });\n    }\n  };\n};\nexport var clearContractAddress = function clearContractAddress(_) {\n  return function (dispatch) {\n    dispatch({\n      type: CHANGE_CONTRACT_ADDRESS,\n      payload: {\n        contractAddress: null,\n        contractAddressValid: false,\n        contractInstance: null\n      }\n    });\n  };\n};\nexport var buyPlot = function buyPlot(contractInstance, plotId, price, userId) {\n  return function (dispatch) {\n    contractInstance.methods.buyPlot(plotId).send({\n      value: price,\n      from: userId\n    }).then(function (response) {\n      console.log(response);\n      loadPlots(contractInstance, dispatch);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var sellPlot = function sellPlot(contractInstance, plotId, price, userId) {\n  return function (dispatch) {\n    contractInstance.methods.putPlotUpForSale(plotId, price).send({\n      from: userId\n    }).then(function (response) {\n      console.log(response);\n      loadPlots(contractInstance, dispatch);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var takeOffMarket = function takeOffMarket(contractInstance, plotId, userId) {\n  return function (dispatch) {\n    contractInstance.methods.takeOffMarket(plotId).send({\n      from: userId\n    }).then(function (response) {\n      console.log(response);\n      loadPlots(contractInstance, dispatch);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nvar loadPlots = function loadPlots(contractInstance, dispatch) {\n  contractInstance.methods.getPlots().call().then(function (response) {\n    var plots = _.zipWith(response[0], response[1], response[2], function (owner, forSale, price) {\n      return {\n        owner: owner,\n        forSale: forSale,\n        price: price\n      };\n    });\n    dispatch({\n      type: PLOTS_LOADED,\n      payload: plots\n    });\n  }).catch(function (error) {\n    return console.log(error);\n  });\n};\nvar subscribeToEvents = function subscribeToEvents(contractInstance, dispatch) {\n  var plotOwnerChangedEvent = contractInstance.events.PlotOwnerChanged({\n    fromBlock: 0\n  }, function (error, event) {\n    console.log('PlotOwnerChanged event : ', event);\n    loadPlots(contractInstance, dispatch);\n  });\n  var plotPriceChangedEvent = contractInstance.events.PlotPriceChanged({\n    fromBlock: 0\n  }, function (error, event) {\n    console.log('PlotPriceChanged event : ', event);\n    loadPlots(contractInstance, dispatch);\n  });\n  var plotAvailabilityChangedEvent = contractInstance.events.PlotAvailabilityChanged({\n    fromBlock: 0\n  }, function (error, event) {\n    console.log('PlotAvailabilityChanged event : ', event);\n    loadPlots(contractInstance, dispatch);\n  });\n};","map":{"version":3,"names":["LOGIN_SUCCESSFUL","LOGIN_FAILED","LOGOUT","SIGNUP_SUCCEEDED","SIGNUP_FAILED","CHANGE_CONTRACT_ADDRESS","PLOTS_LOADED","_","Web3","abi","web3","setProvider","providers","HttpProvider","login","address","password","dispatch","eth","personal","unlockAccount","then","response","console","info","type","payload","catch","error","log","logout","signup","newAccount","changeContractAddress","newAddress","utils","isAddress","contractInstance","Contract","contractAddress","contractAddressValid","loadPlots","subscribeToEvents","clearContractAddress","buyPlot","plotId","price","userId","methods","send","value","from","sellPlot","putPlotUpForSale","takeOffMarket","getPlots","call","plots","zipWith","owner","forSale","plotOwnerChangedEvent","events","PlotOwnerChanged","fromBlock","event","plotPriceChangedEvent","PlotPriceChanged","plotAvailabilityChangedEvent","PlotAvailabilityChanged"],"sources":["C:/Users/Qosain/Desktop/blockchainProject/src/actions/index.js"],"sourcesContent":["import {\n    LOGIN_SUCCESSFUL, \n    LOGIN_FAILED, \n    LOGOUT, \n    SIGNUP_SUCCEEDED, \n    SIGNUP_FAILED,\n    CHANGE_CONTRACT_ADDRESS, \n    PLOTS_LOADED\n} from \"../constants/action-types\";\nimport _ from 'lodash';\nimport Web3 from 'web3';\nimport abi from '../contracts/landContract.json';\n\n\nlet web3 = new Web3();\nweb3.setProvider(\n\n    new Web3.providers.HttpProvider(\n        'http://localhost:7545'\n    )\n);\n\nexport const login = (address, password) => {\n    return dispatch => {\n        web3.eth.personal.unlockAccount(address, password, 600)\n            .then((response) => {\n                console.info('Login successful:', response)\n                dispatch({ type: LOGIN_SUCCESSFUL, payload: address });\n            }).catch(error => {\n                console.log('Login Error:', error)\n                dispatch({ type: LOGIN_FAILED, payload: null });\n            })\n\n    }\n}\n\nexport const logout = () => {\n    return dispatch => dispatch({ type: LOGOUT, payload: null });\n}\n\nexport const signup = (password) => {\n    return dispatch => {\n        web3.eth.personal.newAccount(password)\n            .then(response => {\n                console.info('new account ', response);\n                dispatch({ type: SIGNUP_SUCCEEDED, payload: response })\n            }).catch(error => {\n                console.error('error creating account ', error);\n                dispatch({ type: SIGNUP_FAILED })\n            })\n    }\n}\n\nexport const changeContractAddress = (newAddress) => {\n    return dispatch => {\n        if (web3.utils.isAddress(newAddress)) {\n            let contractInstance = new web3.eth.Contract(abi, newAddress);\n            dispatch({ type: CHANGE_CONTRACT_ADDRESS, payload: { contractAddress: newAddress, contractAddressValid: true, contractInstance: contractInstance } });\n            loadPlots(contractInstance, dispatch);\n            subscribeToEvents(contractInstance, dispatch);\n        } else {\n            dispatch({ type: CHANGE_CONTRACT_ADDRESS, payload: { contractAddress: newAddress, contractAddressValid: false, contractInstance: null } });\n        }\n    }\n}\n\nexport const clearContractAddress = _ => {\n    return dispatch => {\n        dispatch({ type: CHANGE_CONTRACT_ADDRESS, payload: { contractAddress: null, contractAddressValid: false, contractInstance: null } })\n    }\n}\n\nexport const buyPlot = (contractInstance, plotId, price, userId) => {\n    return dispatch => {\n        contractInstance.methods.buyPlot(plotId).send({value: price, from: userId})\n        .then(response => {\n            console.log(response);\n            loadPlots(contractInstance, dispatch);\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n}\n\nexport const sellPlot = (contractInstance, plotId, price, userId) => {\n    return dispatch => {\n        contractInstance.methods.putPlotUpForSale(plotId, price).send({from: userId})\n        .then(response => {\n            console.log(response);\n            loadPlots(contractInstance, dispatch);\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n}\n\nexport const takeOffMarket = (contractInstance, plotId, userId) => {\n    return dispatch => {\n        contractInstance.methods.takeOffMarket(plotId).send({from: userId})\n        .then(response => {\n            console.log(response);\n            loadPlots(contractInstance, dispatch);\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n}\n\nlet loadPlots = (contractInstance, dispatch) => {\n    contractInstance.methods.getPlots().call()\n            .then(response => {\n               let plots =  _.zipWith(response[0], response[1], response[2], (owner, forSale, price) => {\n                    return {owner, forSale, price};\n                })\n                dispatch({type: PLOTS_LOADED, payload: plots})\n            })\n            .catch(error => console.log(error));\n}\n\nlet subscribeToEvents = (contractInstance, dispatch) => {\n    let plotOwnerChangedEvent = contractInstance.events.PlotOwnerChanged(\n        {\n          fromBlock: 0\n        },\n        function(error, event) {\n          console.log('PlotOwnerChanged event : ', event);\n          loadPlots(contractInstance, dispatch);\n        }\n      );\n\n      let plotPriceChangedEvent = contractInstance.events.PlotPriceChanged(\n        {\n          fromBlock: 0\n        },\n        function(error, event) {\n          console.log('PlotPriceChanged event : ', event);\n          loadPlots(contractInstance, dispatch);\n        }\n      );\n\n      let plotAvailabilityChangedEvent = contractInstance.events.PlotAvailabilityChanged(\n        {\n          fromBlock: 0\n        },\n        function(error, event) {\n          console.log('PlotAvailabilityChanged event : ', event);\n          loadPlots(contractInstance, dispatch);\n        }\n      );\n      \n}"],"mappings":"AAAA,SACIA,gBAAgB,EAChBC,YAAY,EACZC,MAAM,EACNC,gBAAgB,EAChBC,aAAa,EACbC,uBAAuB,EACvBC,YAAY,QACT,2BAA2B;AAClC,OAAOC,CAAC,MAAM,QAAQ;AACtB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,GAAG,MAAM,gCAAgC;AAGhD,IAAIC,IAAI,GAAG,IAAIF,IAAI,EAAE;AACrBE,IAAI,CAACC,WAAW,CAEZ,IAAIH,IAAI,CAACI,SAAS,CAACC,YAAY,CAC3B,uBAAuB,CAC1B,CACJ;AAED,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAK,CAAIC,OAAO,EAAEC,QAAQ,EAAK;EACxC,OAAO,UAAAC,QAAQ,EAAI;IACfP,IAAI,CAACQ,GAAG,CAACC,QAAQ,CAACC,aAAa,CAACL,OAAO,EAAEC,QAAQ,EAAE,GAAG,CAAC,CAClDK,IAAI,CAAC,UAACC,QAAQ,EAAK;MAChBC,OAAO,CAACC,IAAI,CAAC,mBAAmB,EAAEF,QAAQ,CAAC;MAC3CL,QAAQ,CAAC;QAAEQ,IAAI,EAAEzB,gBAAgB;QAAE0B,OAAO,EAAEX;MAAQ,CAAC,CAAC;IAC1D,CAAC,CAAC,CAACY,KAAK,CAAC,UAAAC,KAAK,EAAI;MACdL,OAAO,CAACM,GAAG,CAAC,cAAc,EAAED,KAAK,CAAC;MAClCX,QAAQ,CAAC;QAAEQ,IAAI,EAAExB,YAAY;QAAEyB,OAAO,EAAE;MAAK,CAAC,CAAC;IACnD,CAAC,CAAC;EAEV,CAAC;AACL,CAAC;AAED,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAM,GAAS;EACxB,OAAO,UAAAb,QAAQ;IAAA,OAAIA,QAAQ,CAAC;MAAEQ,IAAI,EAAEvB,MAAM;MAAEwB,OAAO,EAAE;IAAK,CAAC,CAAC;EAAA;AAChE,CAAC;AAED,OAAO,IAAMK,MAAM,GAAG,SAATA,MAAM,CAAIf,QAAQ,EAAK;EAChC,OAAO,UAAAC,QAAQ,EAAI;IACfP,IAAI,CAACQ,GAAG,CAACC,QAAQ,CAACa,UAAU,CAAChB,QAAQ,CAAC,CACjCK,IAAI,CAAC,UAAAC,QAAQ,EAAI;MACdC,OAAO,CAACC,IAAI,CAAC,cAAc,EAAEF,QAAQ,CAAC;MACtCL,QAAQ,CAAC;QAAEQ,IAAI,EAAEtB,gBAAgB;QAAEuB,OAAO,EAAEJ;MAAS,CAAC,CAAC;IAC3D,CAAC,CAAC,CAACK,KAAK,CAAC,UAAAC,KAAK,EAAI;MACdL,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CX,QAAQ,CAAC;QAAEQ,IAAI,EAAErB;MAAc,CAAC,CAAC;IACrC,CAAC,CAAC;EACV,CAAC;AACL,CAAC;AAED,OAAO,IAAM6B,qBAAqB,GAAG,SAAxBA,qBAAqB,CAAIC,UAAU,EAAK;EACjD,OAAO,UAAAjB,QAAQ,EAAI;IACf,IAAIP,IAAI,CAACyB,KAAK,CAACC,SAAS,CAACF,UAAU,CAAC,EAAE;MAClC,IAAIG,gBAAgB,GAAG,IAAI3B,IAAI,CAACQ,GAAG,CAACoB,QAAQ,CAAC7B,GAAG,EAAEyB,UAAU,CAAC;MAC7DjB,QAAQ,CAAC;QAAEQ,IAAI,EAAEpB,uBAAuB;QAAEqB,OAAO,EAAE;UAAEa,eAAe,EAAEL,UAAU;UAAEM,oBAAoB,EAAE,IAAI;UAAEH,gBAAgB,EAAEA;QAAiB;MAAE,CAAC,CAAC;MACrJI,SAAS,CAACJ,gBAAgB,EAAEpB,QAAQ,CAAC;MACrCyB,iBAAiB,CAACL,gBAAgB,EAAEpB,QAAQ,CAAC;IACjD,CAAC,MAAM;MACHA,QAAQ,CAAC;QAAEQ,IAAI,EAAEpB,uBAAuB;QAAEqB,OAAO,EAAE;UAAEa,eAAe,EAAEL,UAAU;UAAEM,oBAAoB,EAAE,KAAK;UAAEH,gBAAgB,EAAE;QAAK;MAAE,CAAC,CAAC;IAC9I;EACJ,CAAC;AACL,CAAC;AAED,OAAO,IAAMM,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAGpC,CAAC,EAAI;EACrC,OAAO,UAAAU,QAAQ,EAAI;IACfA,QAAQ,CAAC;MAAEQ,IAAI,EAAEpB,uBAAuB;MAAEqB,OAAO,EAAE;QAAEa,eAAe,EAAE,IAAI;QAAEC,oBAAoB,EAAE,KAAK;QAAEH,gBAAgB,EAAE;MAAK;IAAE,CAAC,CAAC;EACxI,CAAC;AACL,CAAC;AAED,OAAO,IAAMO,OAAO,GAAG,SAAVA,OAAO,CAAIP,gBAAgB,EAAEQ,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAK;EAChE,OAAO,UAAA9B,QAAQ,EAAI;IACfoB,gBAAgB,CAACW,OAAO,CAACJ,OAAO,CAACC,MAAM,CAAC,CAACI,IAAI,CAAC;MAACC,KAAK,EAAEJ,KAAK;MAAEK,IAAI,EAAEJ;IAAM,CAAC,CAAC,CAC1E1B,IAAI,CAAC,UAAAC,QAAQ,EAAI;MACdC,OAAO,CAACM,GAAG,CAACP,QAAQ,CAAC;MACrBmB,SAAS,CAACJ,gBAAgB,EAAEpB,QAAQ,CAAC;IACzC,CAAC,CAAC,CACDU,KAAK,CAAC,UAAAC,KAAK,EAAI;MACZL,OAAO,CAACM,GAAG,CAACD,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAED,OAAO,IAAMwB,QAAQ,GAAG,SAAXA,QAAQ,CAAIf,gBAAgB,EAAEQ,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAK;EACjE,OAAO,UAAA9B,QAAQ,EAAI;IACfoB,gBAAgB,CAACW,OAAO,CAACK,gBAAgB,CAACR,MAAM,EAAEC,KAAK,CAAC,CAACG,IAAI,CAAC;MAACE,IAAI,EAAEJ;IAAM,CAAC,CAAC,CAC5E1B,IAAI,CAAC,UAAAC,QAAQ,EAAI;MACdC,OAAO,CAACM,GAAG,CAACP,QAAQ,CAAC;MACrBmB,SAAS,CAACJ,gBAAgB,EAAEpB,QAAQ,CAAC;IACzC,CAAC,CAAC,CACDU,KAAK,CAAC,UAAAC,KAAK,EAAI;MACZL,OAAO,CAACM,GAAG,CAACD,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAED,OAAO,IAAM0B,aAAa,GAAG,SAAhBA,aAAa,CAAIjB,gBAAgB,EAAEQ,MAAM,EAAEE,MAAM,EAAK;EAC/D,OAAO,UAAA9B,QAAQ,EAAI;IACfoB,gBAAgB,CAACW,OAAO,CAACM,aAAa,CAACT,MAAM,CAAC,CAACI,IAAI,CAAC;MAACE,IAAI,EAAEJ;IAAM,CAAC,CAAC,CAClE1B,IAAI,CAAC,UAAAC,QAAQ,EAAI;MACdC,OAAO,CAACM,GAAG,CAACP,QAAQ,CAAC;MACrBmB,SAAS,CAACJ,gBAAgB,EAAEpB,QAAQ,CAAC;IACzC,CAAC,CAAC,CACDU,KAAK,CAAC,UAAAC,KAAK,EAAI;MACZL,OAAO,CAACM,GAAG,CAACD,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAED,IAAIa,SAAS,GAAG,SAAZA,SAAS,CAAIJ,gBAAgB,EAAEpB,QAAQ,EAAK;EAC5CoB,gBAAgB,CAACW,OAAO,CAACO,QAAQ,EAAE,CAACC,IAAI,EAAE,CACjCnC,IAAI,CAAC,UAAAC,QAAQ,EAAI;IACf,IAAImC,KAAK,GAAIlD,CAAC,CAACmD,OAAO,CAACpC,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,EAAE,UAACqC,KAAK,EAAEC,OAAO,EAAEd,KAAK,EAAK;MACpF,OAAO;QAACa,KAAK,EAALA,KAAK;QAAEC,OAAO,EAAPA,OAAO;QAAEd,KAAK,EAALA;MAAK,CAAC;IAClC,CAAC,CAAC;IACF7B,QAAQ,CAAC;MAACQ,IAAI,EAAEnB,YAAY;MAAEoB,OAAO,EAAE+B;IAAK,CAAC,CAAC;EAClD,CAAC,CAAC,CACD9B,KAAK,CAAC,UAAAC,KAAK;IAAA,OAAIL,OAAO,CAACM,GAAG,CAACD,KAAK,CAAC;EAAA,EAAC;AAC/C,CAAC;AAED,IAAIc,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIL,gBAAgB,EAAEpB,QAAQ,EAAK;EACpD,IAAI4C,qBAAqB,GAAGxB,gBAAgB,CAACyB,MAAM,CAACC,gBAAgB,CAChE;IACEC,SAAS,EAAE;EACb,CAAC,EACD,UAASpC,KAAK,EAAEqC,KAAK,EAAE;IACrB1C,OAAO,CAACM,GAAG,CAAC,2BAA2B,EAAEoC,KAAK,CAAC;IAC/CxB,SAAS,CAACJ,gBAAgB,EAAEpB,QAAQ,CAAC;EACvC,CAAC,CACF;EAED,IAAIiD,qBAAqB,GAAG7B,gBAAgB,CAACyB,MAAM,CAACK,gBAAgB,CAClE;IACEH,SAAS,EAAE;EACb,CAAC,EACD,UAASpC,KAAK,EAAEqC,KAAK,EAAE;IACrB1C,OAAO,CAACM,GAAG,CAAC,2BAA2B,EAAEoC,KAAK,CAAC;IAC/CxB,SAAS,CAACJ,gBAAgB,EAAEpB,QAAQ,CAAC;EACvC,CAAC,CACF;EAED,IAAImD,4BAA4B,GAAG/B,gBAAgB,CAACyB,MAAM,CAACO,uBAAuB,CAChF;IACEL,SAAS,EAAE;EACb,CAAC,EACD,UAASpC,KAAK,EAAEqC,KAAK,EAAE;IACrB1C,OAAO,CAACM,GAAG,CAAC,kCAAkC,EAAEoC,KAAK,CAAC;IACtDxB,SAAS,CAACJ,gBAAgB,EAAEpB,QAAQ,CAAC;EACvC,CAAC,CACF;AAEP,CAAC"},"metadata":{},"sourceType":"module"}