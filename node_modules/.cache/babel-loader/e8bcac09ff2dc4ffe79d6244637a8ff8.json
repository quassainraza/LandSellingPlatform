{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { prefix, splitBsProps, bsClass } from './utils/bootstrapUtils';\nimport Collapse from './Collapse';\nvar propTypes = {\n  /**\n   * Callback fired before the component expands\n   */\n  onEnter: PropTypes.func,\n  /**\n   * Callback fired after the component starts to expand\n   */\n  onEntering: PropTypes.func,\n  /**\n   * Callback fired after the component has expanded\n   */\n  onEntered: PropTypes.func,\n  /**\n   * Callback fired before the component collapses\n   */\n  onExit: PropTypes.func,\n  /**\n   * Callback fired after the component starts to collapse\n   */\n  onExiting: PropTypes.func,\n  /**\n   * Callback fired after the component has collapsed\n   */\n  onExited: PropTypes.func\n};\nvar contextTypes = {\n  $bs_panel: PropTypes.shape({\n    headingId: PropTypes.string,\n    bodyId: PropTypes.string,\n    bsClass: PropTypes.string,\n    expanded: PropTypes.bool\n  })\n};\nvar PanelCollapse = /*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(PanelCollapse, _React$Component);\n  function PanelCollapse() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n  var _proto = PanelCollapse.prototype;\n  _proto.render = function render() {\n    var children = this.props.children;\n    var _ref = this.context.$bs_panel || {},\n      headingId = _ref.headingId,\n      bodyId = _ref.bodyId,\n      _bsClass = _ref.bsClass,\n      expanded = _ref.expanded;\n    var _splitBsProps = splitBsProps(this.props),\n      bsProps = _splitBsProps[0],\n      props = _splitBsProps[1];\n    bsProps.bsClass = _bsClass || bsProps.bsClass;\n    if (headingId && bodyId) {\n      props.id = bodyId;\n      props.role = props.role || 'tabpanel';\n      props['aria-labelledby'] = headingId;\n    }\n    return React.createElement(Collapse, _extends({\n      in: expanded\n    }, props), React.createElement(\"div\", {\n      className: prefix(bsProps, 'collapse')\n    }, children));\n  };\n  return PanelCollapse;\n}(React.Component);\nPanelCollapse.propTypes = propTypes;\nPanelCollapse.contextTypes = contextTypes;\nexport default bsClass('panel', PanelCollapse);","map":null,"metadata":{},"sourceType":"module"}