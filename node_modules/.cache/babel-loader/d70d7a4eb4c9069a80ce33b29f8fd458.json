{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { bsClass, getClassSet, prefix, splitBsProps } from './utils/bootstrapUtils';\nvar propTypes = {\n  /**\n   * An html id attribute, necessary for accessibility\n   * @type {string|number}\n   * @required\n   */\n  id: isRequiredForA11y(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  /**\n   * Sets the direction the Tooltip is positioned towards.\n   */\n  placement: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n  /**\n   * The \"top\" position value for the Tooltip.\n   */\n  positionTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The \"left\" position value for the Tooltip.\n   */\n  positionLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The \"top\" position value for the Tooltip arrow.\n   */\n  arrowOffsetTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The \"left\" position value for the Tooltip arrow.\n   */\n  arrowOffsetLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\nvar defaultProps = {\n  placement: 'right'\n};\nvar Tooltip = /*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Tooltip, _React$Component);\n  function Tooltip() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n  var _proto = Tooltip.prototype;\n  _proto.render = function render() {\n    var _extends2;\n    var _this$props = this.props,\n      placement = _this$props.placement,\n      positionTop = _this$props.positionTop,\n      positionLeft = _this$props.positionLeft,\n      arrowOffsetTop = _this$props.arrowOffsetTop,\n      arrowOffsetLeft = _this$props.arrowOffsetLeft,\n      className = _this$props.className,\n      style = _this$props.style,\n      children = _this$props.children,\n      props = _objectWithoutPropertiesLoose(_this$props, [\"placement\", \"positionTop\", \"positionLeft\", \"arrowOffsetTop\", \"arrowOffsetLeft\", \"className\", \"style\", \"children\"]);\n    var _splitBsProps = splitBsProps(props),\n      bsProps = _splitBsProps[0],\n      elementProps = _splitBsProps[1];\n    var classes = _extends({}, getClassSet(bsProps), (_extends2 = {}, _extends2[placement] = true, _extends2));\n    var outerStyle = _extends({\n      top: positionTop,\n      left: positionLeft\n    }, style);\n    var arrowStyle = {\n      top: arrowOffsetTop,\n      left: arrowOffsetLeft\n    };\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      role: \"tooltip\",\n      className: classNames(className, classes),\n      style: outerStyle\n    }), React.createElement(\"div\", {\n      className: prefix(bsProps, 'arrow'),\n      style: arrowStyle\n    }), React.createElement(\"div\", {\n      className: prefix(bsProps, 'inner')\n    }, children));\n  };\n  return Tooltip;\n}(React.Component);\nTooltip.propTypes = propTypes;\nTooltip.defaultProps = defaultProps;\nexport default bsClass('tooltip', Tooltip);","map":null,"metadata":{},"sourceType":"module"}