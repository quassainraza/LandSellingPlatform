{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { bsClass, bsStyles, getClassSet, prefix, splitBsProps } from './utils/bootstrapUtils';\nimport { State } from './utils/StyleConfig';\nvar propTypes = {\n  active: PropTypes.any,\n  disabled: PropTypes.any,\n  header: PropTypes.node,\n  listItem: PropTypes.bool,\n  onClick: PropTypes.func,\n  href: PropTypes.string,\n  type: PropTypes.string\n};\nvar defaultProps = {\n  listItem: false\n};\nvar ListGroupItem = /*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ListGroupItem, _React$Component);\n  function ListGroupItem() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n  var _proto = ListGroupItem.prototype;\n  _proto.renderHeader = function renderHeader(header, headingClassName) {\n    if (React.isValidElement(header)) {\n      return cloneElement(header, {\n        className: classNames(header.props.className, headingClassName)\n      });\n    }\n    return React.createElement(\"h4\", {\n      className: headingClassName\n    }, header);\n  };\n  _proto.render = function render() {\n    var _this$props = this.props,\n      active = _this$props.active,\n      disabled = _this$props.disabled,\n      className = _this$props.className,\n      header = _this$props.header,\n      listItem = _this$props.listItem,\n      children = _this$props.children,\n      props = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"disabled\", \"className\", \"header\", \"listItem\", \"children\"]);\n    var _splitBsProps = splitBsProps(props),\n      bsProps = _splitBsProps[0],\n      elementProps = _splitBsProps[1];\n    var classes = _extends({}, getClassSet(bsProps), {\n      active: active,\n      disabled: disabled\n    });\n    var Component;\n    if (elementProps.href) {\n      Component = 'a';\n    } else if (elementProps.onClick) {\n      Component = 'button';\n      elementProps.type = elementProps.type || 'button';\n    } else if (listItem) {\n      Component = 'li';\n    } else {\n      Component = 'span';\n    }\n    elementProps.className = classNames(className, classes); // TODO: Deprecate `header` prop.\n\n    if (header) {\n      return React.createElement(Component, elementProps, this.renderHeader(header, prefix(bsProps, 'heading')), React.createElement(\"p\", {\n        className: prefix(bsProps, 'text')\n      }, children));\n    }\n    return React.createElement(Component, elementProps, children);\n  };\n  return ListGroupItem;\n}(React.Component);\nListGroupItem.propTypes = propTypes;\nListGroupItem.defaultProps = defaultProps;\nexport default bsClass('list-group-item', bsStyles(_Object$values(State), ListGroupItem));","map":null,"metadata":{},"sourceType":"module"}