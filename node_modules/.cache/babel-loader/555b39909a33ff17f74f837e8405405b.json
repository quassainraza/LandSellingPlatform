{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bsClass, bsSizes, getClassSet, prefix, splitBsProps } from './utils/bootstrapUtils';\nimport { Size } from './utils/StyleConfig';\nvar propTypes = {\n  /**\n   * A css class to apply to the Modal dialog DOM node.\n   */\n  dialogClassName: PropTypes.string\n};\nvar ModalDialog = /*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ModalDialog, _React$Component);\n  function ModalDialog() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n  var _proto = ModalDialog.prototype;\n  _proto.render = function render() {\n    var _extends2;\n    var _this$props = this.props,\n      dialogClassName = _this$props.dialogClassName,\n      className = _this$props.className,\n      style = _this$props.style,\n      children = _this$props.children,\n      props = _objectWithoutPropertiesLoose(_this$props, [\"dialogClassName\", \"className\", \"style\", \"children\"]);\n    var _splitBsProps = splitBsProps(props),\n      bsProps = _splitBsProps[0],\n      elementProps = _splitBsProps[1];\n    var bsClassName = prefix(bsProps);\n    var modalStyle = _extends({\n      display: 'block'\n    }, style);\n    var dialogClasses = _extends({}, getClassSet(bsProps), (_extends2 = {}, _extends2[bsClassName] = false, _extends2[prefix(bsProps, 'dialog')] = true, _extends2));\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      style: modalStyle,\n      className: classNames(className, bsClassName)\n    }), React.createElement(\"div\", {\n      className: classNames(dialogClassName, dialogClasses)\n    }, React.createElement(\"div\", {\n      className: prefix(bsProps, 'content'),\n      role: \"document\"\n    }, children)));\n  };\n  return ModalDialog;\n}(React.Component);\nModalDialog.propTypes = propTypes;\nexport default bsClass('modal', bsSizes([Size.LARGE, Size.SMALL], ModalDialog));","map":null,"metadata":{},"sourceType":"module"}